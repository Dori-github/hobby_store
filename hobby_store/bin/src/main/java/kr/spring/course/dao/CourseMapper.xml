<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.course.dao.CourseMapper">
	<!-- sql 태그와 include 태그를 이용해 SQL문 재사용 -->
	<!-- ====================온라인,오프라인====================== -->
	<sql id="courseOnoff">
			<if test="onoff!=null and onoff!=''">
				<if test="onoff==1"> <!-- 오프라인 -->
					course_onoff='off'
				</if>
				<if test="onoff==2"> <!-- 온라인 -->
					course_onoff='on'
				</if>
			</if>
	</sql>
	
	<!-- ====================원데이,정기====================== -->
	<sql id="courseOneweek">
		<if test="oneweek!=null and oneweek!=''">
			<if test="oneweek==1"><!-- 원데이 -->
				AND course_oneweek='one'
			</if>
			<if test="oneweek==2"><!-- 정기 -->
				AND course_oneweek='week'
			</if>
		</if>
	</sql>
	
	<!-- ====================키필드,키워드====================== -->
	<sql id="courseSearch">
		<if test="keyword!=null and keyword!=''">
				<if test="keyfield==1">
					AND course_name LIKE '%' || #{keyword} || '%' OR course_content LIKE '%' || #{keyword} || '%' OR mem_nickname LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					AND course_name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					AND course_content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==4">
					AND mem_nickname LIKE '%' || #{keyword} || '%'
				</if>
			</if>
	</sql>
	
	<!-- ====================카테고리====================== -->
	<sql id="courseCate">
		<if test="cate!=null and cate!=''">
			<if test="cate_num!=0"> <!-- 전체가 아닐 때 -->
				AND cate_nums LIKE '%' || #{cate_num} || '%'
			</if>
		</if>
	</sql>
	
	<!-- ====================지역====================== -->
	<sql id="courseLoc">
      <if test="location!=null and location!=''">
         <if test="!'전체'.equals(location)">
            AND course_address1 LIKE #{location} || '%'
         </if>
      </if>
      
   </sql>
	
	<!-- ====================정렬====================== -->
	<sql id="courseOrder">
		<if test="order==1">
			course_num DESC
		</if>
		<if test="order==2">
			replycount DESC
		</if>
		<if test="order==3">
			fav DESC
		</if>
		<if test="order==4">
			course_price ASC
		</if>
	</sql>
	
	
	<select id="selectCourseCount" parameterType="map" resultType="integer">
		SELECT COUNT(*) FROM course JOIN member USING(mem_num) 
		LEFT JOIN (SELECT course_num , COUNT(reply_num) AS replycount 
		FROM course_reply GROUP BY course_num) USING(course_num)
		LEFT JOIN (SELECT course_num,COUNT(fav_num) AS fav 
		FROM course_fav GROUP BY course_num) USING(course_num)
		LEFT JOIN (SELECT course_num , ROUND(AVG(star_auth),1) AS staravg 
		FROM course_reply GROUP BY course_num) USING(course_num)
		WHERE <include refid="courseOnoff"></include> <include refid="courseOneweek"></include> <include refid="courseSearch"></include>
		<include refid="courseCate"> </include>
		ORDER BY <include refid="courseOrder"></include>
	</select>
	 
	<select id="selectCourseList" parameterType="map" resultType="courseVO">
		SELECT * FROM 
		(SELECT a.*,rownum rnum FROM 
		(SELECT * 
		FROM course c JOIN member m USING(mem_num) 
		LEFT JOIN (SELECT course_num , COUNT(reply_num) AS replycount 
		FROM course_reply GROUP BY course_num) USING(course_num)
		LEFT JOIN (SELECT course_num,COUNT(fav_num) AS fav 
		FROM course_fav GROUP BY course_num) USING(course_num)
		LEFT JOIN (SELECT course_num , ROUND(AVG(star_auth),1) AS staravg 
		FROM course_reply GROUP BY course_num) USING(course_num)
			WHERE <include refid="courseOnoff"></include> <include refid="courseOneweek"> </include> <include refid="courseSearch"></include>
			<include refid="courseCate"> </include> <include refid="courseLoc"> </include>
			ORDER BY <include refid="courseOrder"></include>)a)
			<![CDATA[
			WHERE rnum>=#{start} AND rnum<=#{end}
			]]>
	</select>
	
	
	
	<!-- 댓글 목록 -->
	<sql id="replyOrder">
		<if test="order==1"><!-- 최신순 -->
			reply_num DESC
		</if>
		<if test="order==2"><!-- 별점순 -->
			star DESC
		</if>
		<if test="order==3"><!-- 추천순 -->
			fav_cnt DESC
		</if>
	</sql>

	<select id="selectReplyCount" parameterType="map" resultType="integer">
		SELECT COUNT(*) FROM course_reply JOIN member USING(mem_num) JOIN member_detail USING(mem_num) WHERE course_num=#{course_num}
			 ORDER BY <include refid="replyOrder"></include> 
	</select>
	
  	<select id="selectListReply" parameterType="map" resultType="courseReplyVO">
  			SELECT * FROM
  			(SELECT a.*, rownum rnum FROM
  			(SELECT * FROM
  		    (SELECT reply_num,
  		            <![CDATA[
  		            REPLACE(REPLACE(reply_content,'<','&lt;'),'>','&gt;') reply_content,
  		            ]]>
  		            reply_photo1,reply_photo2,reply_photo3,reply_photo_name1,reply_photo_name2,reply_photo_name3,
  		            reply_date,
  		            reply_mdate,
  		            course_num,
  		            mem_num,
  		            mem_id,
  		            mem_nickname,
  		            mem_photo,
  		            star_auth
  		            FROM course_reply 
  		            JOIN member USING (mem_num) 
  		            JOIN member_detail USING(mem_num))
  		            LEFT OUTER JOIN (SELECT * FROM course_reply_fav WHERE fmem_num=#{mem_num}) USING(reply_num)
                    LEFT OUTER JOIN (SELECT reply_num, COUNT(reply_num) AS favcount 
                    FROM course_reply_fav group by reply_num) USING (reply_num)
  		          WHERE course_num = #{course_num}
  		          ORDER BY <include refid="replyOrder"></include>)a) 
  		    <![CDATA[
  		    WHERE rnum >= #{start} AND rnum <= #{end}
  		    ]]>          
  	</select>
	
	<update id="deleteReplyPhoto" parameterType="Integer">
		<if test="photo_type==1">
			UPDATE course_reply SET reply_photo1='',reply_photo_name1='' WHERE reply_num=#{reply_num}
		</if>
		<if test="photo_type==2">
			UPDATE course_reply SET reply_photo2='',reply_photo_name2='' WHERE reply_num=#{reply_num}
		</if>
		<if test="photo_type==3">
			UPDATE course_reply SET reply_photo3='',reply_photo_name3='' WHERE reply_num=#{reply_num}
		</if>
	</update>
	 
	
	
</mapper> 