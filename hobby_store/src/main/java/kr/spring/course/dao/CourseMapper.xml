<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.course.dao.CourseMapper">
	<!-- sql 태그와 include 태그를 이용해 SQL문 재사용 -->
	<!-- ====================키필드,키워드====================== -->
	<sql id="courseSearch">
		<where>
			<if test="keyword!=null and keyword!=''">
				<if test="keyfield==1">
					course_name LIKE '%' || #{keyword} || '%' OR course_content LIKE '%' || #{keyword} || '%' OR mem_nickname LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					course_name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					course_content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==4">
					mem_nickname LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</sql>
	
	<!-- ====================온라인,오프라인====================== -->
	<sql id="courseOnoff">
		<where>
			<if test="keyword!=null and keyword!=''">
				<if test="keyfield==1">
					course_name LIKE '%' || #{keyword} || '%' OR course_content LIKE '%' || #{keyword} || '%' OR mem_nickname LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					course_name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					course_content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==4">
					mem_nickname LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</sql>
	
	<!-- ====================정렬====================== -->
	<sql id="courseOrder">
		<if test="order==1">
			course_num DESC
		</if>
		<if test="order==2">
			reply DESC
		</if>
		<if test="order==3">
			fav DESC
		</if>
		<if test="order==4">
			course_price ASC
		</if>
	</sql>
	
	
	<select id="selectCourseCount" parameterType="map" resultType="integer">
		SELECT COUNT(*) FROM course JOIN member USING(mem_num) <include refid="courseSearch"></include> 
	</select>
	 
	<select id="selectCourseList" parameterType="map" resultType="courseVO">
		SELECT * FROM (SELECT a.*,rownum rnum FROM (SELECT * 
			FROM course c JOIN member USING(mem_num) LEFT JOIN (SELECT course_num,COUNT(fav_num) AS fav FROM course_fav GROUP BY course_num) USING(course_num)
			<include refid="courseSearch"></include> ORDER BY <include refid="courseOrder"></include>)a)
			<![CDATA[
			WHERE rnum>=#{start} AND rnum<=#{end}
			]]>
	</select>
	
	
	
	<!-- 댓글 목록 -->
  	<select id="selectListReply" parameterType="map"
  	                       resultType="courseReplyVO">
  		SELECT
  		   *
  		FROM(SELECT
  		       a.*,
  		       rownum rnum
  		     FROM(SELECT
  		            reply_num,
  		            <![CDATA[
  		            REPLACE(REPLACE(re_content,'<','&lt;'),'>','&gt;') reply_content,
  		            ]]>
  		            reply_date,
  		            re_mdate,
  		            board_num,
  		            mem_num,
  		            id,
  		            nick_name
  		          FROM course_reply JOIN member 
  		          USING (mem_num)
  		          WHERE board_num = #{board_num}
  		          ORDER BY re_num DESC)a)
  		    <![CDATA[
  		    WHERE rnum >= #{start} AND rnum <= #{end}
  		    ]]>          
  	</select>
	
	
</mapper> 